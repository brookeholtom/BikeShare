my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(weather=ifelse(weather=4, 3, weather)) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="hour") %>%
step_num2factor(transform = function(x) x+1,, levels=amnt) %>%
my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(weather=ifelse(weather=4, 3, weather)) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="hour") %>%
step_num2factor(transform = function(x) x+1,, levels=amnt)
amnt <- c("spring", "summer", "fall", "winter")
my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(weather=ifelse(weather=4, 3, weather)) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="hour") %>%
step_num2factor(transform = function(x) x+1,, levels=amnt)
my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(weather=ifelse(weather=4, 3, weather)) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1,, levels=amnt)
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(weather=ifelse(weather = 4, 3, weather)) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1,, levels=amnt)
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(weather=ifelse(weather = 4, 3, =weather)) %>%
my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(ifelse(weather = 4, 3, weather)) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1,, levels=amnt)
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(weather = ifelse(weather = 4, 3, 0)) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1,, levels=amnt)
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(weather = ifelse(x = 4, 3, weather)) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1,, levels=amnt)
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(weather == ifelse(weather = 4, 3, weather)) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1,, levels=amnt)
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(weather = ifelse(weather = 4, 3, weather)) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1,, levels=amnt)
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
bike %>%
ifelse(weather = 4, 3, weather)
bike %>%
weather %>%
ifelse(x = 4, 3, weather)
x <- c(6:-4)
sqrt(x)  #- gives warning
sqrt(ifelse(x >= 0, x, NA))
my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1, levels=amnt)
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
bake(prepped_recipe, new_data=AnotherDataSet)13
bake(prepped_recipe, new_data=AnotherDataSet)
bake(prepped_recipe, new_data=new_bike)
new_bike <-
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
new_bike <- vroom("train.csv")
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
bake(prepped_recipe, new_data=new_bike)
view(new_bike)
my_recipe <- recipe(count ~ ., data=bike) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1, levels=amnt)
new_bike <- vroom("train.csv")
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
bake(prepped_recipe, new_data=new_bike)
view(new_bike)
bike %>%
mutate(weather = ifelse(weather == 4, 3, weather))
view(bike)
bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
view(bike)
bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
bike <- bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
view(bike)
amnt <- c("spring", "summer", "fall", "winter")
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1, levels=amnt)
new_bike <- vroom("train.csv")
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
bake(prepped_recipe, new_data=new_bike)
view(new_bike)
bake(prepped_recipe)
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataS12
bake(prepped_recipe)
bake(prepped_recipe, new_data=bike)
bake(prepped_recipe, new_data=bike)
view(bike)
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1, levels=amnt)
my_recipe
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1, levels=amnt) %>%
step_rm(var) %>%
step_select(var, -var2)
prepped_recipe <- prep(my_recipe)
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1, levels=amnt) %>%
step_rm(c(casual, registered))
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, new_data=bike)
bake(prepped_recipe, new_data=bike)
bake(prepped_recipe, new_data=bike)
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1, levels=c("spring", "summer", "fall", "winter")) %>%
step_rm(c(casual, registered))
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, new_data=bike)
my_recipe <- recipe(count ~ ., data=bike) %>%
dayofweek = step_date(datetime, features="dow") %>%
month = step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1, levels=c("spring", "summer", "fall", "winter")) %>%
step_rm(c(casual, registered))
my_recipe <- recipe(count ~ ., data=bike) %>%
dayofweek = step_date(datetime, features="dow") %>%
month = step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1, levels=c("spring", "summer", "fall", "winter")) %>%
step_rm(c(casual, registered))
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month", columns=TRUE) %>%
step_num2factor(transform = function(x) x+1, levels=c("spring", "summer", "fall", "winter")) %>%
step_rm(c(casual, registered))
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, new_data=bike)
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(transform = function(x) x+1, levels=c("spring", "summer", "fall", "winter")) %>%
step_rm(c(casual, registered))
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, new_data=bike)
bike
new_data
bake(prepped_recipe, new_data=bike)
bike <- bake(prepped_recipe, new_data=bike)
bike
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(weather, transform = function(x) x+1, levels=c("spring", "summer", "fall", "winter")) %>%
step_rm(c(casual, registered))
prepped_recipe <- prep(my_recipe)
bike <- bake(prepped_recipe, new_data=bike)
library(tidyverse)
library(tidymodels)
library(vroom)
bike <- vroom("train.csv")
bike <- bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
amnt <- c("spring", "summer", "fall", "winter")
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>%
step_date(datetime, features="month") %>%
step_num2factor(weather, transform = function(x) x+1, levels=c("spring", "summer", "fall", "winter")) %>%
step_rm(c(casual, registered))
prepped_recipe <- prep(my_recipe)
bike <- bake(prepped_recipe, new_data=bike)
bike
view(bike)
bike_updated <- bake(prepped_recipe, new_data=bike)
bike <- bake(prepped_recipe, new_data=bike)
source("C:/Users/brook/Downloads/STAT348/BikeShare/BikeShareAnalysis.R")
library(tidyverse) #importing needed packages
library(tidymodels)
library(vroom)
bike <- vroom("train.csv") #importing the data via vroom
#cleaning section: changing the single "4" weather day to "3"
bike <- bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x+1, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
bike <- bake(prepped_recipe, new_data=bike)
view(bike)
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x+1, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x+1, levels=c("clear", "mist", "rain/snow")) %>%
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
bike <- vroom("train.csv") #importing the data via vroom
#cleaning section: changing the single "4" weather day to "3"
bike <- bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x+1, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x+1, levels=c("clear", "mist", "rain/snow")) %>%
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
bike <- bake(prepped_recipe, new_data=bike)
view(bike)
bike <- vroom("train.csv") #importing the data via vroom
#cleaning section: changing the single "4" weather day to "3"
bike <- bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>%
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
bike <- bake(prepped_recipe, new_data=bike)
view(bike)
library(tidyverse) #importing needed packages
library(tidymodels)
library(vroom)
bike <- vroom("train.csv") #importing the data via vroom
#cleaning section: changing the single "4" weather day to "3"
bike <- bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_num2factor(holiday, transform= function(x) x, level=c("no", "yes")) %>% #modifying holiday to factor from numbers
step_num2factor(workingday, transform = function(x) x, level=c("no", "yes")) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_num2factor(holiday, transform= function(x) x, level=c("no", "yes")) %>% #modifying holiday to factor from numbers
step_num2factor(workingday, transform = function(x) x, level=c("no", "yes")) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_num2factor(holiday, transform= function(x) x, levels=c("no", "yes")) %>% #modifying holiday to factor from numbers
step_num2factor(workingday, transform = function(x) x, levels=c("no", "yes")) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
library(tidyverse) #importing needed packages
library(tidymodels)
library(vroom)
bike <- vroom("train.csv") #importing the data via vroom
#cleaning section: changing the single "4" weather day to "3"
bike <- bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_num2factor(holiday, transform= function(x) x, levels=c("no", "yes")) %>% #modifying holiday to factor from numbers
step_num2factor(workingday, transform = function(x) x, levels=c("no", "yes")) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_num2factor(holiday, transform= function(x) x, levels=c("no", "yes")) %>% #modifying holiday to factor from numbers
step_num2factor(workingday, transform = function(x) x, levels=c("no", "yes")) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_num2factor(holiday, transform= function(x) x, levels=c("no", "yes")) %>% #modifying holiday to factor from numbers
step_num2factor(workingday, transform = function(x) x, levels=c("no", "yes")) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_num2factor(holiday, transform= function(x) x, levels=c("no", "yes")) %>% #modifying holiday to factor from numbers
#step_num2factor(workingday, transform = function(x) x, levels=c("no", "yes")) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
#step_num2factor(holiday, transform= function(x) x, levels=c("no", "yes")) %>% #modifying holiday to factor from numbers
#step_num2factor(workingday, transform = function(x) x, levels=c("no", "yes")) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
bike <- bake(prepped_recipe, new_data=bike)
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_num2factor(holiday, transform= function(x) x, levels=c("no", "yes")) %>% #modifying holiday to factor from numbers
#step_num2factor(workingday, transform = function(x) x, levels=c("no", "yes")) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_bin2factor(holiday) %>% #modifying holiday to factor from numbers
step_bin2factor(workingday) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
library(tidyverse) #importing needed packages
library(tidymodels)
library(vroom)
bike <- vroom("train.csv") #importing the data via vroom
#cleaning section: changing the single "4" weather day to "3"
bike <- bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_bin2factor(holiday) %>% #modifying holiday to factor from numbers
step_bin2factor(workingday) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
bike <- bake(prepped_recipe, new_data=bike)
view(bike)
bike_clean <- bake(prepped_recipe, new_data=bike)
library(tidyverse) #importing needed packages
library(tidymodels)
library(vroom)
bike <- vroom("train.csv") #importing the data via vroom
#cleaning section: changing the single "4" weather day to "3"
bike <- bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_bin2factor(holiday) %>% #modifying holiday to factor from numbers
step_bin2factor(workingday) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
bike_clean <- bake(prepped_recipe, new_data=bike)
view(bike_clean)
view(bike)
view(bike_Clean)
view(bike_clean)
install.packages('tidymodels')
install.packages("tidymodels")
library(tidymodels)
bike_test <-  vroom("test.csv") #importing test data
library(tidyverse) #importing needed packages
library(tidymodels)
library(vroom)
bike <- vroom("train.csv") #importing the data via vroom
bike_test <-  vroom("test.csv") #importing test data
#cleaning section: changing the single "4" weather day to "3"
bike <- bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_bin2factor(holiday) %>% #modifying holiday to factor from numbers
step_bin2factor(workingday) %>% #modifying working day to factor from numbers
step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
bike_clean <- bake(prepped_recipe, new_data=bike)
#creating a model
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bike_test)
bike_predictions <- predict(bike_workflow,
new_data=myNewData)
bike_predictions <- predict(bike_workflow,
new_data=myNewData)
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
bike_clean <- bake(prepped_recipe, new_data=bike)
#creating a model
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bike)
bike_predictions <- predict(bike_workflow,
new_data=bike_test)
bike_predictions
bike_predictions <- predict(bike_workflow,
new_data=bike_test)
library(tidyverse) #importing needed packages
library(tidymodels)
library(vroom)
bike <- vroom("train.csv") #importing the data via vroom
bike_test <-  vroom("test.csv") #importing test data
#cleaning section: changing the single "4" weather day to "3"
bike <- bike %>%
mutate(weather = ifelse(weather >= 4, 3, weather))
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_bin2factor(holiday) %>% #modifying holiday to factor from numbers
step_bin2factor(workingday) %>% #modifying working day to factor from numbers
#step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_bin2factor(holiday) %>% #modifying holiday to factor from numbers
step_bin2factor(workingday) %>% #modifying working day to factor from numbers
#step_rm(c(casual, registered)) #removing the casual and registered columns, not needed
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
#feature engineering section via recipe:
my_recipe <- recipe(count ~ ., data=bike) %>%
step_date(datetime, features="dow") %>% #adding day of week column
step_date(datetime, features="month") %>% #adding month column
step_num2factor(season, transform = function(x) x, levels=c("spring", "summer", "fall", "winter")) %>% #modifying season column from numbers to a factor
step_num2factor(weather, transform = function(x) x, levels=c("clear", "mist", "rain/snow")) %>% #modifying weather from numbers into factors
step_bin2factor(holiday) %>% #modifying holiday to factor from numbers
step_bin2factor(workingday) %>% #modifying working day to factor from numbers
#updating table to reflect above changes, will be saved with original name "bike"
prepped_recipe <- prep(my_recipe)
